/**
 * Chatooly CDN - Core Library (POC Version)
 * Provides PNG export functionality for canvas-based design tools
 * Supports p5.js, Three.js, and DOM-based tools
 */
!function(){"use strict";
// Global Chatooly object
window.Chatooly={version:"1.0.0-poc",config:{},init:function(t){this.config=Object.assign({name:"Untitled Tool",exportFormats:["png"],resolution:2,buttonPosition:"bottom-right"},t),this._createExportButton(),this._detectDevelopmentMode()},export:function(t,n){if(n=n||{},"png"!==(t=t||"png"))return void console.warn("Chatooly POC: Only PNG export supported in this version");const e=this._detectExportTarget();"canvas"===e.type?this._exportCanvas(e.element,n):this._exportDOM(e.element,n)},publish:function(t){if(!this._isDevelopment())return void console.warn("Chatooly: Publishing only available in development mode");const n=(t=t||{}).name||this.config.name||prompt("Enter tool name for publishing:");if(!n)return void console.log("Chatooly: Publishing cancelled");const e=n.toLowerCase().replace(/[^a-z0-9\s-]/g,"").replace(/\s+/g,"-").replace(/-+/g,"-").replace(/^-|-$/g,"");console.log('Chatooly: Publishing tool "'+n+'" as "'+e+'"'),"function"==typeof window.publishTool?window.publishTool(e,this._gatherToolFiles()):this._showPublishInstructions(e)},_gatherToolFiles:function(){const t={},n=document.documentElement.cloneNode(!0),e=n.querySelector("#chatooly-export-btn");
// Get current HTML (remove Chatooly button for published version)
e&&e.remove(),t["index.html"]="<!DOCTYPE html>"+n.outerHTML;const o=Array.from(document.querySelectorAll("style")).map(t=>t.textContent).join("\n");o&&(t["style.css"]=o);const i=Array.from(document.querySelectorAll("script:not([src])")).map(t=>t.textContent).join("\n");return i&&(t["tool.js"]=i),t},_showPublishInstructions:function(t){const n=`\nPublishing "${t}":\n\n1. Run: npm run publish\n   (This will call .chatooly/publish.js script)\n\n2. Or manually upload to staging:\n   - Tool will be available at: tools.chatooly.com/staging/${t}\n   - Admin can promote to: tools.chatooly.com/${t}\n\n3. Required files:\n   - index.html (main tool file)\n   - style.css (if using external styles)  \n   - tool.js (if using external scripts)\n\nSee template documentation for setup details.\n            `.trim();alert(n),console.log("Chatooly:",n)},_detectExportTarget:function(){const t=document.querySelectorAll("canvas");if(t.length>0){let n=t[0];for(let e=1;e<t.length;e++){const o=t[e];o.width*o.height>n.width*n.height&&(n=o)}return{type:"canvas",element:n}}const n=["#gradient-display","#preview",".export-area"];for(const t of n){const n=document.querySelector(t);if(n)return{type:"dom",element:n}}const e=["#app","#canvas-container","main"];for(const t of e){const n=document.querySelector(t);if(n)return{type:"dom",element:n}}return{type:"dom",element:document.body}},_exportCanvas:function(t,n){const e=n.resolution||this.config.resolution||2,o=n.filename||this._generateFilename();try{let n;if(e>1&&this._canRerenderAtHighRes(t))n=this._getHighResCanvas(t,e);else if(e>1){const o=document.createElement("canvas"),i=o.getContext("2d");o.width=t.width*e,o.height=t.height*e,i.imageSmoothingEnabled=!0,i.imageSmoothingQuality="high",i.drawImage(t,0,0,o.width,o.height),n=o.toDataURL("image/png")}else n=t.toDataURL("image/png");this._downloadImage(n,o),console.log("Chatooly: Canvas exported at "+e+"x resolution")}catch(t){console.error("Chatooly: Canvas export failed:",t),alert("Export failed. This might be due to CORS restrictions.")}},_canRerenderAtHighRes:function(t){return window.p5||window.THREE||"defaultCanvas0"===t.id},_getHighResCanvas:function(t,n){if(window.p5&&window.pixelDensity){const e=window.pixelDensity();window.pixelDensity(n),window.redraw();const o=t.toDataURL("image/png");return window.pixelDensity(e),o}if(window.THREE&&(window.renderer||window.threeRenderer)){const t=window.renderer||window.threeRenderer,e=window.scene||window.threeScene,o=window.camera||window.threeCamera;if(t&&e&&o){const i=t.getSize(new THREE.Vector2),a=document.createElement("canvas"),l=new THREE.WebGLRenderer({canvas:a,antialias:!0,preserveDrawingBuffer:!0});l.setSize(i.x*n,i.y*n,!1),l.setClearColor(t.getClearColor(),t.getClearAlpha()),l.render(e,o);const s=a.toDataURL("image/png");return l.dispose(),s}}const e=document.createElement("canvas"),o=e.getContext("2d");return e.width=t.width*n,e.height=t.height*n,o.imageSmoothingEnabled=!0,o.imageSmoothingQuality="high",o.drawImage(t,0,0,e.width,e.height),e.toDataURL("image/png")},_exportDOM:function(t,n){const e=n.filename||this._generateFilename();"undefined"==typeof html2canvas?this._loadHtml2Canvas().then(()=>{this._captureDOM(t,e,n)}).catch(t=>{console.error("Chatooly: Failed to load html2canvas:",t),alert("Export failed: Could not load required library")}):this._captureDOM(t,e,n)},_captureDOM:function(t,n,e){const o=e.resolution||this.config.resolution||2;html2canvas(t,{scale:o,useCORS:!0,allowTaint:!1,backgroundColor:null}).then(t=>{const e=t.toDataURL("image/png");this._downloadImage(e,n),console.log("Chatooly: DOM exported successfully")}).catch(t=>{console.error("Chatooly: DOM export failed:",t),alert("Export failed. Try exporting a specific element.")})},_loadHtml2Canvas:function(){return this._html2canvasPromise||(this._html2canvasPromise=new Promise((t,n)=>{const e=["https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js","https://unpkg.com/html2canvas@1.4.1/dist/html2canvas.min.js","https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js"],o=i=>{if(i>=e.length)return void n(new Error("All CDN sources failed"));const a=document.createElement("script");a.src=e[i],a.async=!0,a.crossOrigin="anonymous";const l=()=>{document.head.removeChild(a)};a.onload=()=>{l(),t()},a.onerror=()=>{l(),console.warn(`Chatooly: Failed to load html2canvas from ${e[i]}`),o(i+1)},setTimeout(()=>{window.html2canvas||(l(),o(i+1))},1e4),document.head.appendChild(a)};o(0)})),this._html2canvasPromise},_downloadImage:function(t,n){const e=document.createElement("a");e.download=n,e.href=t,document.body.appendChild(e),e.click(),document.body.removeChild(e)},_generateFilename:function(){return`${this.config.name.toLowerCase().replace(/[^a-z0-9]/g,"-")}-export-${(new Date).toISOString().slice(0,10)}.png`},_createExportButton:function(){const t=document.getElementById("chatooly-export-btn");t&&t.remove();const n=document.createElement("div");n.id="chatooly-export-btn",n.innerHTML=`\n                <div class="chatooly-btn-main">ðŸ“¥</div>\n                <div class="chatooly-btn-menu" style="display: none;">\n                    <button onclick="Chatooly.export('png', {resolution: 1})">1x PNG</button>\n                    <button onclick="Chatooly.export('png', {resolution: 2})">2x PNG</button>\n                    <button onclick="Chatooly.export('png', {resolution: 4})">4x PNG</button>\n                    ${this._isDevelopment()?'<button onclick="Chatooly.publish()">ðŸ“¤ Publish</button>':""}\n                </div>\n            `,n.style.cssText="\n                position: fixed;\n                bottom: 20px;\n                right: 20px;\n                z-index: 10000;\n                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;\n            ";const e=document.createElement("style");e.textContent="\n                #chatooly-export-btn .chatooly-btn-main {\n                    width: 50px;\n                    height: 50px;\n                    background: #007bff;\n                    border-radius: 25px;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    cursor: pointer;\n                    box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);\n                    font-size: 20px;\n                    transition: all 0.2s ease;\n                }\n                \n                #chatooly-export-btn .chatooly-btn-main:hover {\n                    transform: translateY(-2px);\n                    box-shadow: 0 6px 16px rgba(0, 123, 255, 0.4);\n                }\n                \n                #chatooly-export-btn .chatooly-btn-menu {\n                    position: absolute;\n                    bottom: 60px;\n                    right: 0;\n                    background: white;\n                    border-radius: 8px;\n                    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n                    padding: 8px;\n                    min-width: 120px;\n                }\n                \n                #chatooly-export-btn .chatooly-btn-menu button {\n                    display: block;\n                    width: 100%;\n                    padding: 8px 12px;\n                    border: none;\n                    background: none;\n                    text-align: left;\n                    cursor: pointer;\n                    border-radius: 4px;\n                    margin: 2px 0;\n                    font-size: 14px;\n                }\n                \n                #chatooly-export-btn .chatooly-btn-menu button:hover {\n                    background: #f8f9fa;\n                }\n            ",document.head.appendChild(e);const o=n.querySelector(".chatooly-btn-main"),i=n.querySelector(".chatooly-btn-menu");o.addEventListener("click",()=>{const t="none"!==i.style.display;i.style.display=t?"none":"block"}),document.addEventListener("click",t=>{n.contains(t.target)||(i.style.display="none")}),document.body.appendChild(n)},_detectDevelopmentMode:function(){this._isDevelopment()&&console.log("Chatooly: Development mode detected - publish functionality enabled")},_isDevelopment:function(){return"localhost"===location.hostname||"127.0.0.1"===location.hostname||"file:"===location.protocol}},document.addEventListener("DOMContentLoaded",function(){window.ChatoolyConfig?Chatooly.init(window.ChatoolyConfig):Chatooly.init()}),"loading"===document.readyState||setTimeout(()=>{window.ChatoolyConfig?Chatooly.init(window.ChatoolyConfig):Chatooly.init()},100)}();